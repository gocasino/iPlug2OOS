#include "DelayProcessor.h"

DelayProcessor::DelayProcessor()
{
    // set up the delay parameters
    delayLengthParameter.set("Delay Length", 0.5, 0.1, 2);
    parameters.add(delayLengthParameter);
}

void DelayProcessor::processBlock (AudioBuffer<float>& buffer, MidiBuffer& midiMessages)
{
    // create a local copy of the delay length parameter
    float delayLength = delayLengthParameter.get();

    // loop through the samples in the buffer
    for (int channel = 0; channel < buffer.getNumChannels(); ++channel)
    {
        float* samples = buffer.getWritePointer(channel);
        for (int i = 0; i < buffer.getNumSamples(); ++i)
        {
            // apply the delay effect to the sample
            samples[i] += samples[i - (int)(getSampleRate() * delayLength)];
        }
    }
}
